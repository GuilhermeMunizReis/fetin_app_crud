import { SQLWrapper } from 'drizzle-orm/sql';
import { ResultSetHeader } from 'mysql2/promise';
import { MySqlDialect } from './dialect';
import { MySqlDelete, MySqlInsertBuilder, MySqlSelect, MySqlUpdateBuilder } from './query-builders';
import { MySqlQueryResult, MySqlSession } from './session';
import { AnyMySqlTable } from './table';
export declare class MySqlDatabase {
    constructor(
    /** @internal */
    dialect: MySqlDialect, 
    /** @internal */
    session: MySqlSession);
    select<TTable extends AnyMySqlTable>(from: TTable): MySqlSelect<TTable>;
    update<TTable extends AnyMySqlTable>(table: TTable): MySqlUpdateBuilder<TTable>;
    insert<TTable extends AnyMySqlTable>(table: TTable): MySqlInsertBuilder<TTable>;
    delete<TTable extends AnyMySqlTable>(table: TTable): MySqlDelete<TTable>;
    execute<T extends {
        [column: string]: any;
    } = ResultSetHeader>(query: SQLWrapper): Promise<MySqlQueryResult<T>>;
}
//# sourceMappingURL=db.d.ts.map