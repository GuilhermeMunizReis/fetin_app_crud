"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MySqlColumnWithAutoIncrement = exports.MySqlColumnBuilderWithAutoIncrement = exports.MySqlColumn = exports.MySqlColumnBuilder = void 0;
const drizzle_orm_1 = require("drizzle-orm");
const column_builder_1 = require("drizzle-orm/column-builder");
const foreign_keys_1 = require("../foreign-keys");
class MySqlColumnBuilder extends column_builder_1.ColumnBuilder {
    constructor(name) {
        super(name);
        this.foreignKeyConfigs = [];
    }
    notNull() {
        return super.notNull();
    }
    default(value) {
        return super.default(value);
    }
    primaryKey() {
        return super.primaryKey();
    }
    references(ref, actions = {}) {
        this.foreignKeyConfigs.push({ ref, actions });
        return this;
    }
    /** @internal */
    buildForeignKeys(column, table) {
        return this.foreignKeyConfigs.map(({ ref, actions }) => {
            return ((ref, actions) => {
                const builder = new foreign_keys_1.ForeignKeyBuilder(() => {
                    const foreignColumn = ref();
                    return { columns: [column], foreignColumns: [foreignColumn] };
                });
                if (actions.onUpdate) {
                    builder.onUpdate(actions.onUpdate);
                }
                if (actions.onDelete) {
                    builder.onDelete(actions.onDelete);
                }
                return builder.build(table);
            })(ref, actions);
        });
    }
}
exports.MySqlColumnBuilder = MySqlColumnBuilder;
// To understand how to use `MySqlColumn` and `AnyMySqlColumn`, see `Column` and `AnyColumn` documentation.
class MySqlColumn extends drizzle_orm_1.Column {
    constructor(table, config) {
        super(table, config);
        this.table = table;
    }
    unsafe() {
        return this;
    }
}
exports.MySqlColumn = MySqlColumn;
class MySqlColumnBuilderWithAutoIncrement extends MySqlColumnBuilder {
    constructor(name) {
        super(name);
        this.config.autoIncrement = false;
    }
    autoincrement() {
        this.config.autoIncrement = true;
        return this;
    }
}
exports.MySqlColumnBuilderWithAutoIncrement = MySqlColumnBuilderWithAutoIncrement;
class MySqlColumnWithAutoIncrement extends MySqlColumn {
    constructor(table, config) {
        super(table, config);
        this.table = table;
        this.autoIncrement = config.autoIncrement;
    }
}
exports.MySqlColumnWithAutoIncrement = MySqlColumnWithAutoIncrement;
//# sourceMappingURL=common.js.map