"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.mysqlEnum = exports.MySqlEnumColumn = exports.MySqlEnumColumnBuilder = void 0;
const common_1 = require("./common");
class MySqlEnumColumnBuilder extends common_1.MySqlColumnBuilder {
    constructor(name, values) {
        super(name);
        this.config.values = values;
    }
    /** @internal */
    build(table) {
        return new MySqlEnumColumn(table, this.config);
    }
}
exports.MySqlEnumColumnBuilder = MySqlEnumColumnBuilder;
class MySqlEnumColumn extends common_1.MySqlColumn {
    constructor(table, config) {
        super(table, config);
        this.values = config.values;
    }
    getSQLType() {
        return `ENUM(${this.values.map((value) => `'${value}'`).join(',')})`;
    }
}
exports.MySqlEnumColumn = MySqlEnumColumn;
function mysqlEnum(name, values) {
    if (values.length === 0)
        throw Error(`You have an empty array for "${name}" enum values`);
    return new MySqlEnumColumnBuilder(name, values);
}
exports.mysqlEnum = mysqlEnum;
//# sourceMappingURL=enum.js.map