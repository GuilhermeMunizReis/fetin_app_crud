import { ColumnConfig } from 'drizzle-orm';
import { ColumnBuilderConfig } from 'drizzle-orm/column-builder';
import { AnyMySqlTable } from '../table';
import { MySqlColumn, MySqlColumnBuilder } from './common';
export declare class MySqlDateBuilder extends MySqlColumnBuilder<ColumnBuilderConfig<{
    data: Date;
    driverParam: string | number;
}>> {
    constructor(name: string);
}
export declare class MySqlDate<TTableName extends string> extends MySqlColumn<ColumnConfig<{
    tableName: TTableName;
    data: Date;
    driverParam: number | string;
}>> {
    protected $mySqlColumnBrand: 'MySqlDate';
    constructor(table: AnyMySqlTable<{
        name: TTableName;
    }>, config: MySqlDateBuilder['config']);
    getSQLType(): string;
    mapFromDriverValue(value: string): Date;
}
export declare class MySqlDateStringBuilder extends MySqlColumnBuilder<ColumnBuilderConfig<{
    data: string;
    driverParam: string | number;
}>> {
    constructor(name: string);
}
export declare class MySqlStringDate<TTableName extends string> extends MySqlColumn<ColumnConfig<{
    tableName: TTableName;
    data: string;
    driverParam: number | string;
}>> {
    protected $mySqlColumnBrand: 'MySqlDateString';
    constructor(table: AnyMySqlTable<{
        name: TTableName;
    }>, config: MySqlDateStringBuilder['config']);
    getSQLType(): string;
}
export declare function date(name: string): MySqlDateBuilder;
export declare function date(name: string, config: {
    mode: 'string';
}): MySqlDateStringBuilder;
export declare function date(name: string, config: {
    mode: 'date';
}): MySqlDateBuilder;
//# sourceMappingURL=date.d.ts.map