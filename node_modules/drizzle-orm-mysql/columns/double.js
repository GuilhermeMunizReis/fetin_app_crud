"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.double = exports.MySqlDouble = exports.MySqlDoubleBuilder = void 0;
const common_1 = require("./common");
class MySqlDoubleBuilder extends common_1.MySqlColumnBuilderWithAutoIncrement {
    constructor(name, precision, scale) {
        super(name);
        this.config.precision = precision;
        this.config.scale = scale;
    }
    /** @internal */
    build(table) {
        return new MySqlDouble(table, this.config);
    }
}
exports.MySqlDoubleBuilder = MySqlDoubleBuilder;
class MySqlDouble extends common_1.MySqlColumnWithAutoIncrement {
    constructor(table, config) {
        super(table, config);
        this.precision = config.precision;
        this.scale = config.scale;
    }
    getSQLType() {
        return 'double';
        // if (typeof this.precision !== 'undefined' && typeof this.scale !== 'undefined') {
        // 	return `double(${this.precision}, ${this.scale})`;
        // } else if (typeof this.precision === 'undefined') {
        // 	return 'double';
        // } else {
        // 	return `double(${this.precision})`;
        // }
    }
}
exports.MySqlDouble = MySqlDouble;
function double(name, config) {
    return new MySqlDoubleBuilder(name, config === null || config === void 0 ? void 0 : config.precision, config === null || config === void 0 ? void 0 : config.scale);
}
exports.double = double;
//# sourceMappingURL=double.js.map