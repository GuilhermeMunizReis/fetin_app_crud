import { ColumnConfig } from 'drizzle-orm';
import { ColumnBuilderConfig } from 'drizzle-orm/column-builder';
import { AnyMySqlTable } from '../table';
import { MySqlColumn, MySqlColumnBuilder } from './common';
export declare class MySqlTimeBuilder extends MySqlColumnBuilder<ColumnBuilderConfig<{
    data: string;
    driverParam: string | number;
}>, {
    fsp: number | undefined;
}> {
    constructor(name: string, fsp: number | undefined);
}
export declare class MySqlTime<TTableName extends string> extends MySqlColumn<ColumnConfig<{
    tableName: TTableName;
    data: string;
    driverParam: number | string;
}>> {
    protected $mySqlColumnBrand: 'MySqlTime';
    readonly fsp: number | undefined;
    constructor(table: AnyMySqlTable<{
        name: TTableName;
    }>, config: MySqlTimeBuilder['config']);
    getSQLType(): string;
}
export declare type TimeConfig = {
    fsp?: 0 | 1 | 2 | 3 | 4 | 5 | 6;
};
export declare function time(name: string, config?: TimeConfig): MySqlTimeBuilder;
//# sourceMappingURL=time.d.ts.map