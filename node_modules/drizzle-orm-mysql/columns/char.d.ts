import { ColumnConfig } from 'drizzle-orm';
import { ColumnBuilderConfig } from 'drizzle-orm/column-builder';
import { AnyMySqlTable } from '../table';
import { MySqlColumn, MySqlColumnBuilder } from './common';
export declare class MySqlCharBuilder<TData extends string = string> extends MySqlColumnBuilder<ColumnBuilderConfig<{
    data: TData;
    driverParam: number | string;
}>, {
    length: number | undefined;
}> {
    constructor(name: string, length?: number);
}
export declare class MySqlChar<TTableName extends string, TData extends string> extends MySqlColumn<ColumnConfig<{
    tableName: TTableName;
    data: TData;
    driverParam: number | string;
}>> {
    protected $mySqlColumnBrand: 'MySqlChar';
    length: number | undefined;
    constructor(table: AnyMySqlTable<{
        name: TTableName;
    }>, config: MySqlCharBuilder<TData>['config']);
    getSQLType(): string;
}
export interface MySqlCharConfig {
    length?: number;
}
export declare function char(name: string, config?: MySqlCharConfig): MySqlCharBuilder;
//# sourceMappingURL=char.d.ts.map