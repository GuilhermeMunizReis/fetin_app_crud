"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.date = exports.MySqlStringDate = exports.MySqlDateStringBuilder = exports.MySqlDate = exports.MySqlDateBuilder = void 0;
const common_1 = require("./common");
class MySqlDateBuilder extends common_1.MySqlColumnBuilder {
    constructor(name) {
        super(name);
    }
    /** @internal */
    build(table) {
        return new MySqlDate(table, this.config);
    }
}
exports.MySqlDateBuilder = MySqlDateBuilder;
class MySqlDate extends common_1.MySqlColumn {
    constructor(table, config) {
        super(table, config);
    }
    getSQLType() {
        return `date`;
    }
    mapFromDriverValue(value) {
        return new Date(value);
    }
}
exports.MySqlDate = MySqlDate;
class MySqlDateStringBuilder extends common_1.MySqlColumnBuilder {
    constructor(name) {
        super(name);
    }
    /** @internal */
    build(table) {
        return new MySqlStringDate(table, this.config);
    }
}
exports.MySqlDateStringBuilder = MySqlDateStringBuilder;
class MySqlStringDate extends common_1.MySqlColumn {
    constructor(table, config) {
        super(table, config);
    }
    getSQLType() {
        return `date`;
    }
}
exports.MySqlStringDate = MySqlStringDate;
function date(name, config) {
    if ((config === null || config === void 0 ? void 0 : config.mode) === 'string') {
        return new MySqlDateStringBuilder(name);
    }
    return new MySqlDateBuilder(name);
}
exports.date = date;
//# sourceMappingURL=date.js.map