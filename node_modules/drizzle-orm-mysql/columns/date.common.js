"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MySqlDateColumnBaseBuilder = void 0;
const drizzle_orm_1 = require("drizzle-orm");
const common_1 = require("./common");
class MySqlDateColumnBaseBuilder extends common_1.MySqlColumnBuilder {
    constructor() {
        super(...arguments);
        this.hasOnUpdateNow = false;
    }
    notNull() {
        return super.notNull();
    }
    default(value) {
        return super.default(value);
    }
    primaryKey() {
        return super.primaryKey();
    }
    defaultNow() {
        return this.default((0, drizzle_orm_1.sql) `now()`);
    }
    onUpdateNow() {
        this.hasOnUpdateNow = true;
        this.config.hasDefault = true;
        return this;
    }
}
exports.MySqlDateColumnBaseBuilder = MySqlDateColumnBaseBuilder;
// export abstract class MySqlDateBaseColumn<
// 	TTableName extends string,
// 	TData extends ColumnData,
// 	TDriverParam extends MySqlColumnDriverParam,
// 	TNotNull extends boolean,
// 	THasDefault extends boolean,
// > extends MySqlColumn<TTableName, TData, TDriverParam, TNotNull, THasDefault> {
// 	readonly hasOnUpdateNow: boolean;
// 	constructor(
// 		table: AnyMySqlTable<TTableName>,
// 		builder: MySqlDateColumnBaseBuilder<TData, TDriverParam, TNotNull, THasDefault>,
// 	) {
// 		super(table, builder);
// 		this.hasOnUpdateNow = builder.hasOnUpdateNow;
// 	}
// }
//# sourceMappingURL=date.common.js.map