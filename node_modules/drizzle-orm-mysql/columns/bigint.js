"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.bigint = exports.MySqlBigInt64 = exports.MySqlBigInt64Builder = exports.MySqlBigInt53 = exports.MySqlBigInt53Builder = void 0;
const common_1 = require("./common");
class MySqlBigInt53Builder extends common_1.MySqlColumnBuilderWithAutoIncrement {
    /** @internal */
    build(table) {
        return new MySqlBigInt53(table, this.config);
    }
}
exports.MySqlBigInt53Builder = MySqlBigInt53Builder;
class MySqlBigInt53 extends common_1.MySqlColumnWithAutoIncrement {
    getSQLType() {
        return 'bigint';
    }
    mapFromDriverValue(value) {
        if (typeof value === 'number') {
            return value;
        }
        return parseInt(value);
    }
}
exports.MySqlBigInt53 = MySqlBigInt53;
class MySqlBigInt64Builder extends common_1.MySqlColumnBuilderWithAutoIncrement {
    /** @internal */
    build(table) {
        return new MySqlBigInt64(table, this.config);
    }
}
exports.MySqlBigInt64Builder = MySqlBigInt64Builder;
class MySqlBigInt64 extends common_1.MySqlColumnWithAutoIncrement {
    getSQLType() {
        return 'bigint';
    }
    mapFromDriverValue(value) {
        return BigInt(value);
    }
}
exports.MySqlBigInt64 = MySqlBigInt64;
function bigint(name, config) {
    if (config.mode === 'number') {
        return new MySqlBigInt53Builder(name);
    }
    return new MySqlBigInt64Builder(name);
}
exports.bigint = bigint;
//# sourceMappingURL=bigint.js.map