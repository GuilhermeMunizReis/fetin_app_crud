import { ColumnConfig } from 'drizzle-orm';
import { ColumnBuilderConfig } from 'drizzle-orm/column-builder';
import { AnyMySqlTable } from '../table';
import { MySqlColumn, MySqlColumnBuilder } from './common';
export declare class MySqlVarCharBuilder<TData extends string = string> extends MySqlColumnBuilder<ColumnBuilderConfig<{
    data: TData;
    driverParam: number | string;
}>, {
    length: number | undefined;
}> {
}
export declare class MySqlVarChar<TTableName extends string, TData extends string> extends MySqlColumn<ColumnConfig<{
    tableName: TTableName;
    data: TData;
    driverParam: number | string;
}>> {
    protected $mySqlColumnBrand: 'MySqlVarChar';
    length: number | undefined;
    constructor(table: AnyMySqlTable<{
        name: TTableName;
    }>, config: MySqlVarCharBuilder<TData>['config']);
    getSQLType(): string;
}
export interface MySqlVarcharOptions {
    length: number;
}
export declare function varchar(name: string, options: MySqlVarcharOptions): MySqlVarCharBuilder;
export declare function varchar<T extends string = string>(name: string, options: MySqlVarcharOptions): MySqlVarCharBuilder<T>;
//# sourceMappingURL=varchar.d.ts.map