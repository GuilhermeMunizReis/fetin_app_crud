import { AnyMySqlTable } from './table';
import { SelectFields, SelectFieldsOrdered } from './operations';
import { Index } from './indexes';
import { Check } from './checks';
import { ForeignKey } from './foreign-keys';
export declare function getTableConfig<TTable extends AnyMySqlTable>(table: TTable): {
    columns: import("./columns/common").AnyMySqlColumn<{
        tableName: string;
    }>[];
    indexes: Index[];
    foreignKeys: ForeignKey[];
    checks: Check[];
    name: string;
    schema: string | undefined;
};
export declare function getTableColumns<TTable extends AnyMySqlTable>(table: TTable): import("./columns/common").AnyMySqlColumn<{
    tableName: string;
}>[];
export declare function getTableIndexes<TTable extends AnyMySqlTable>(table: TTable): Index[];
export declare function getTableForeignKeys<TTable extends AnyMySqlTable>(table: TTable): ForeignKey[];
export declare function getTableChecks<TTable extends AnyMySqlTable>(table: TTable): Check[];
export declare type Assume<T, U> = T extends U ? T : U;
export declare function orderSelectedFields(fields: SelectFields, pathPrefix?: string[]): SelectFieldsOrdered;
//# sourceMappingURL=utils.d.ts.map