"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.substring = exports.concat = void 0;
const drizzle_orm_1 = require("drizzle-orm");
const sql_1 = require("drizzle-orm/sql");
__exportStar(require("drizzle-orm/expressions"), exports);
function concat(column, value) {
    return (0, drizzle_orm_1.sql) `${column} || ${(0, sql_1.param)(value, column)}`;
}
exports.concat = concat;
function substring(column, { from, for: _for }) {
    const chunks = [(0, drizzle_orm_1.sql) `substring(`, column];
    if (from !== undefined) {
        chunks.push((0, drizzle_orm_1.sql) ` from `, (0, sql_1.param)(from, column));
    }
    if (_for !== undefined) {
        chunks.push((0, drizzle_orm_1.sql) ` for `, (0, sql_1.param)(_for, column));
    }
    chunks.push((0, drizzle_orm_1.sql) `)`);
    return drizzle_orm_1.sql.fromList(chunks);
}
exports.substring = substring;
//# sourceMappingURL=expressions.js.map