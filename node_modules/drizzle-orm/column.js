"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Column = void 0;
// export type UpdateColumnConfig<
// 	T extends ColumnBaseConfig,
// 	TUpdate extends Partial<ColumnBaseConfig>,
// > = Update<T, TUpdate, keyof ColumnBaseConfig>;
/*
    `Column` only accepts a full `ColumnConfig` as its generic.
    To infer parts of the config, use `AnyColumn` that accepts a partial config.
    See `GetColumnData` for example usage of inferring.
*/
class Column {
    constructor(table, config) {
        this.table = table;
        this.name = config.name;
        this.notNull = config.notNull;
        this.default = config.default;
        this.hasDefault = config.hasDefault;
        this.primary = config.primaryKey;
    }
    mapFromDriverValue(value) {
        return value;
    }
    mapToDriverValue(value) {
        return value;
    }
}
exports.Column = Column;
//# sourceMappingURL=column.js.map