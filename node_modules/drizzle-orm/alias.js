"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TableAliasProxyHandler = exports.ColumnAliasProxyHandler = void 0;
const column_1 = require("./column");
const table_1 = require("./table");
class ColumnAliasProxyHandler {
    constructor(table) {
        this.table = table;
    }
    get(columnObj, prop, receiver) {
        if (prop === 'table') {
            return this.table;
        }
        return columnObj[prop];
    }
}
exports.ColumnAliasProxyHandler = ColumnAliasProxyHandler;
class TableAliasProxyHandler {
    constructor(alias) {
        this.alias = alias;
    }
    get(tableObj, prop, receiver) {
        if (prop === table_1.Table.Symbol.Name) {
            return this.alias;
        }
        if (prop === table_1.Table.Symbol.Columns) {
            const columns = tableObj[table_1.Table.Symbol.Columns];
            if (!columns) {
                return columns;
            }
            const proxiedColumns = {};
            Object.keys(columns).map((key) => {
                proxiedColumns[key] = new Proxy(columns[key], new ColumnAliasProxyHandler(new Proxy(tableObj, this)));
            });
            return proxiedColumns;
        }
        const value = tableObj[prop];
        if (value instanceof column_1.Column) {
            return new Proxy(value, new ColumnAliasProxyHandler(new Proxy(tableObj, this)));
        }
        return value;
    }
}
exports.TableAliasProxyHandler = TableAliasProxyHandler;
//# sourceMappingURL=alias.js.map