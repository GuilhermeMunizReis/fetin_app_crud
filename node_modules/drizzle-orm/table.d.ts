import { AnyColumn } from './column';
export declare const Name: unique symbol;
export declare const Schema: unique symbol;
export declare const Columns: unique symbol;
export declare const OriginalName: unique symbol;
export declare class Table<TName extends string | undefined = string, TSchema extends string | undefined = string> {
    protected $brand: 'Table';
    protected $name: TName;
    protected $schema: TSchema;
    static readonly Symbol: {
        Name: typeof Name;
        Schema: typeof Schema;
        OriginalName: typeof OriginalName;
        Columns: typeof Columns;
    };
    /**
     * Can be changed if the table is aliased.
     */
    [Name]: TName;
    /**
     * Used to store the original name of the table, before any aliasing.
     */
    [OriginalName]: TName;
    [Schema]: TSchema | undefined;
    [Columns]: Record<string | symbol, AnyColumn>;
    constructor(name: TName, schema?: TSchema);
}
export declare function getTableName<TTableName extends string>(table: Table<TTableName>): TTableName;
//# sourceMappingURL=table.d.ts.map