import { ColumnConfig } from 'drizzle-orm';
import { ColumnBuilderConfig } from 'drizzle-orm/column-builder';
import { AnyPgTable } from '../table';
import { PgColumn, PgColumnBuilder } from './common';
export declare class PgDoublePrecisionBuilder extends PgColumnBuilder<ColumnBuilderConfig<{
    data: number;
    driverParam: string | number;
}>> {
    protected $pgColumnBuilderBrand: 'PgDoublePrecisionBuilder';
    constructor(name: string, length?: number);
}
export declare class PgDoublePrecision<TTableName extends string> extends PgColumn<ColumnConfig<{
    tableName: TTableName;
    data: number;
    driverParam: string | number;
}>> {
    protected $pgColumnBrand: 'PgDoublePrecision';
    constructor(table: AnyPgTable<{
        name: TTableName;
    }>, config: PgDoublePrecisionBuilder['config']);
    getSQLType(): string;
    mapFromDriverValue(value: string | number): number;
}
export declare function doublePrecision(name: string): PgDoublePrecisionBuilder;
//# sourceMappingURL=double-precision.d.ts.map