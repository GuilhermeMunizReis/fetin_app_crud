"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.date = exports.PgDateString = exports.PgDateStringBuilder = exports.PgDate = exports.PgDateBuilder = void 0;
const common_1 = require("./common");
const date_common_1 = require("./date.common");
class PgDateBuilder extends date_common_1.PgDateColumnBaseBuilder {
    /** @internal */
    build(table) {
        return new PgDate(table, this.config);
    }
}
exports.PgDateBuilder = PgDateBuilder;
class PgDate extends common_1.PgColumn {
    constructor(table, config) {
        super(table, config);
    }
    getSQLType() {
        return 'date';
    }
    mapFromDriverValue(value) {
        return new Date(value);
    }
    mapToDriverValue(value) {
        return value.toISOString();
    }
}
exports.PgDate = PgDate;
class PgDateStringBuilder extends date_common_1.PgDateColumnBaseBuilder {
    /** @internal */
    build(table) {
        return new PgDateString(table, this.config);
    }
}
exports.PgDateStringBuilder = PgDateStringBuilder;
class PgDateString extends common_1.PgColumn {
    constructor(table, config) {
        super(table, config);
    }
    getSQLType() {
        return 'date';
    }
}
exports.PgDateString = PgDateString;
function date(name, config) {
    if ((config === null || config === void 0 ? void 0 : config.mode) === 'date') {
        return new PgDateBuilder(name);
    }
    return new PgDateStringBuilder(name);
}
exports.date = date;
//# sourceMappingURL=date.js.map