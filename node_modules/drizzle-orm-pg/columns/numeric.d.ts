import { ColumnConfig } from 'drizzle-orm';
import { ColumnBuilderConfig } from 'drizzle-orm/column-builder';
import { AnyPgTable } from '../table';
import { PgColumn, PgColumnBuilder } from './common';
export declare class PgNumericBuilder extends PgColumnBuilder<ColumnBuilderConfig<{
    data: string;
    driverParam: string;
}>, {
    precision: number | undefined;
    scale: number | undefined;
}> {
    protected $pgColumnBuilderBrand: 'PgNumericBuilder';
    constructor(name: string, precision?: number, scale?: number);
}
export declare class PgNumeric<TTableName extends string> extends PgColumn<ColumnConfig<{
    tableName: TTableName;
    data: string;
    driverParam: string;
}>> {
    protected $pgColumnBrand: 'PgNumeric';
    readonly precision: number | undefined;
    readonly scale: number | undefined;
    constructor(table: AnyPgTable<{
        name: TTableName;
    }>, config: PgNumericBuilder['config']);
    getSQLType(): string;
}
export declare function numeric(name: string, config?: {
    precision: number;
    scale?: number;
} | {
    precision?: number;
    scale: number;
} | {
    precision: number;
    scale: number;
}): PgNumericBuilder;
export declare const decimal: typeof numeric;
//# sourceMappingURL=numeric.d.ts.map