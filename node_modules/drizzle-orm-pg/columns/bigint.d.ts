import { ColumnConfig } from 'drizzle-orm';
import { ColumnBuilderConfig } from 'drizzle-orm/column-builder';
import { PgColumn, PgColumnBuilder } from './common';
export declare class PgBigInt53Builder extends PgColumnBuilder<ColumnBuilderConfig<{
    data: number;
    driverParam: number | string;
}>> {
    protected $pgColumnBuilderBrand: 'PgBigInt53Builder';
}
export declare class PgBigInt53<TTableName extends string> extends PgColumn<ColumnConfig<{
    tableName: TTableName;
    data: number;
    driverParam: number | string;
}>> {
    protected $pgColumnBrand: 'PgBigInt53';
    getSQLType(): string;
    mapFromDriverValue(value: number | string): number;
}
export declare class PgBigInt64Builder extends PgColumnBuilder<ColumnBuilderConfig<{
    data: bigint;
    driverParam: string;
}>> {
    protected $pgColumnBuilderBrand: 'PgBigInt64Builder';
}
export declare class PgBigInt64<TTableName extends string> extends PgColumn<ColumnConfig<{
    tableName: TTableName;
    data: bigint;
    driverParam: string;
}>> {
    protected $pgColumnBrand: 'PgBigInt64';
    getSQLType(): string;
    mapFromDriverValue(value: string): bigint;
}
interface PgBigIntConfig<T extends 'number' | 'bigint' = 'number' | 'bigint'> {
    mode: T;
}
export declare function bigint(name: string, config: PgBigIntConfig<'number'>): PgBigInt53Builder;
export declare function bigint(name: string, config: PgBigIntConfig<'bigint'>): PgBigInt64Builder;
export {};
//# sourceMappingURL=bigint.d.ts.map