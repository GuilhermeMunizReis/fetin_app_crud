import { ColumnConfig } from 'drizzle-orm';
import { ColumnBuilderConfig } from 'drizzle-orm/column-builder';
import { AnyPgTable } from '../table';
import { PgColumn, PgColumnBuilder } from './common';
export declare class PgRealBuilder extends PgColumnBuilder<ColumnBuilderConfig<{
    data: number;
    driverParam: string | number;
}>, {
    length: number | undefined;
}> {
    protected $pgColumnBuilderBrand: 'PgRealBuilder';
    constructor(name: string, length?: number);
}
export declare class PgReal<TTableName extends string> extends PgColumn<ColumnConfig<{
    tableName: TTableName;
    data: number;
    driverParam: string | number;
}>> {
    protected $pgColumnBrand: 'PgReal';
    constructor(table: AnyPgTable<{
        name: TTableName;
    }>, config: PgRealBuilder['config']);
    getSQLType(): string;
    mapFromDriverValue: (value: string | number) => number;
}
export declare function real(name: string): PgRealBuilder;
//# sourceMappingURL=real.d.ts.map