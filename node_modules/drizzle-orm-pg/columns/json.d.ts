import { ColumnConfig } from 'drizzle-orm';
import { ColumnBuilderConfig } from 'drizzle-orm/column-builder';
import { AnyPgTable } from '../table';
import { PgColumn, PgColumnBuilder } from './common';
export declare class PgJsonBuilder<TData> extends PgColumnBuilder<ColumnBuilderConfig<{
    data: TData;
    driverParam: TData | string;
}>> {
    protected $pgColumnBuilderBrand: 'PgJsonBuilder';
    constructor(name: string);
}
export declare class PgJson<TTableName extends string, TData> extends PgColumn<ColumnConfig<{
    tableName: TTableName;
    data: TData;
    driverParam: TData | string;
}>> {
    protected $pgColumnBrand: 'PgJson';
    constructor(table: AnyPgTable<{
        name: TTableName;
    }>, config: PgJsonBuilder<TData>['config']);
    getSQLType(): string;
    mapToDriverValue(value: TData): string;
    mapFromDriverValue(value: TData | string): TData;
}
export declare function json<TData = any>(name: string): PgJsonBuilder<TData>;
//# sourceMappingURL=json.d.ts.map