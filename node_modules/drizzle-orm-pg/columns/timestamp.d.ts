import { ColumnConfig } from 'drizzle-orm';
import { ColumnBuilderConfig } from 'drizzle-orm/column-builder';
import { AnyPgTable } from '../table';
import { PgColumn } from './common';
import { PgDateColumnBaseBuilder } from './date.common';
export declare class PgTimestampBuilder extends PgDateColumnBaseBuilder<ColumnBuilderConfig<{
    data: Date;
    driverParam: string;
}>, {
    withTimezone: boolean;
    precision: number | undefined;
}> {
    protected $pgColumnBuilderBrand: 'PgTimestampBuilder';
    constructor(name: string, withTimezone: boolean, precision: number | undefined);
}
export declare class PgTimestamp<TTableName extends string> extends PgColumn<ColumnConfig<{
    tableName: TTableName;
    data: Date;
    driverParam: string;
}>> {
    protected $pgColumnBrand: 'PgTimestamp';
    readonly withTimezone: boolean;
    readonly precision: number | undefined;
    constructor(table: AnyPgTable<{
        name: TTableName;
    }>, config: PgTimestampBuilder['config']);
    getSQLType(): string;
    mapFromDriverValue: (value: string) => Date;
}
export declare class PgTimestampStringBuilder extends PgDateColumnBaseBuilder<ColumnBuilderConfig<{
    data: string;
    driverParam: string;
}>, {
    withTimezone: boolean;
    precision: number | undefined;
}> {
    protected $pgColumnBuilderBrand: 'PgTimestampStringBuilder';
    constructor(name: string, withTimezone: boolean, precision: number | undefined);
}
export declare class PgTimestampString<TTableName extends string> extends PgColumn<ColumnConfig<{
    tableName: TTableName;
    data: string;
    driverParam: string;
}>> {
    protected $pgColumnBrand: 'PgTimestampString';
    readonly withTimezone: boolean;
    readonly precision: number | undefined;
    constructor(table: AnyPgTable<{
        name: TTableName;
    }>, config: PgTimestampStringBuilder['config']);
    getSQLType(): string;
}
export declare type Precision = 0 | 1 | 2 | 3 | 4 | 5 | 6;
export declare function timestamp(name: string): PgTimestampBuilder;
export declare function timestamp(name: string, config: {
    mode: 'string';
    precision?: Precision;
    withTimezone?: boolean;
}): PgTimestampStringBuilder;
export declare function timestamp(name: string, config: {
    mode?: 'date';
    precision?: Precision;
    withTimezone?: boolean;
}): PgTimestampBuilder;
//# sourceMappingURL=timestamp.d.ts.map