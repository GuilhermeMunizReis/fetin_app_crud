"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.doublePrecision = exports.PgDoublePrecision = exports.PgDoublePrecisionBuilder = void 0;
const common_1 = require("./common");
class PgDoublePrecisionBuilder extends common_1.PgColumnBuilder {
    constructor(name, length) {
        super(name);
        this.length = length;
    }
    /** @internal */
    build(table) {
        return new PgDoublePrecision(table, this.config);
    }
}
exports.PgDoublePrecisionBuilder = PgDoublePrecisionBuilder;
class PgDoublePrecision extends common_1.PgColumn {
    constructor(table, config) {
        super(table, config);
    }
    getSQLType() {
        return 'double precision';
    }
    mapFromDriverValue(value) {
        if (typeof value === 'string') {
            return parseFloat(value);
        }
        return value;
    }
}
exports.PgDoublePrecision = PgDoublePrecision;
function doublePrecision(name) {
    return new PgDoublePrecisionBuilder(name);
}
exports.doublePrecision = doublePrecision;
//# sourceMappingURL=double-precision.js.map