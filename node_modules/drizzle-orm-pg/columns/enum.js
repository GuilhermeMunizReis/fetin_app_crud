"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pgEnum = exports.PgEnumColumn = exports.PgEnumColumnBuilder = exports.isPgEnum = void 0;
const common_1 = require("./common");
const isPgEnumSym = Symbol('isPgEnum');
function isPgEnum(obj) {
    return !!obj && typeof obj === 'function' && isPgEnumSym in obj;
}
exports.isPgEnum = isPgEnum;
class PgEnumColumnBuilder extends common_1.PgColumnBuilder {
    constructor(name, enumInstance) {
        super(name);
        this.config.enumInstance = enumInstance;
    }
    notNull() {
        return super.notNull();
    }
    default(value) {
        return super.default(value);
    }
    primaryKey() {
        return super.primaryKey();
    }
    /** @internal */
    build(table) {
        return new PgEnumColumn(table, this.config);
    }
}
exports.PgEnumColumnBuilder = PgEnumColumnBuilder;
class PgEnumColumn extends common_1.PgColumn {
    constructor(table, config) {
        super(table, config);
        this.enum = config.enumInstance;
    }
    getSQLType() {
        return this.enum.enumName;
    }
}
exports.PgEnumColumn = PgEnumColumn;
// Gratitude to zod for the enum function types
function pgEnum(enumName, values) {
    const enumInstance = Object.assign((name) => new PgEnumColumnBuilder(name, enumInstance), {
        enumName,
        enumValues: values,
        [isPgEnumSym]: true,
    });
    return enumInstance;
}
exports.pgEnum = pgEnum;
//# sourceMappingURL=enum.js.map