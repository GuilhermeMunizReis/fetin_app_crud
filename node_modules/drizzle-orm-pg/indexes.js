"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.uniqueIndex = exports.index = exports.Index = exports.IndexBuilder = exports.IndexBuilderOn = void 0;
class IndexBuilderOn {
    constructor(unique, name) {
        this.unique = unique;
        this.name = name;
    }
    on(...columns) {
        return new IndexBuilder(columns, this.unique, false, this.name);
    }
    onOnly(...columns) {
        return new IndexBuilder(columns, this.unique, true, this.name);
    }
}
exports.IndexBuilderOn = IndexBuilderOn;
class IndexBuilder {
    constructor(columns, unique, only, name) {
        this.config = {
            name,
            columns,
            unique,
            only,
        };
    }
    concurrently() {
        this.config.concurrently = true;
        return this;
    }
    using(method) {
        this.config.using = method;
        return this;
    }
    asc() {
        this.config.order = 'asc';
        return this;
    }
    desc() {
        this.config.order = 'desc';
        return this;
    }
    nullsFirst() {
        this.config.nulls = 'first';
        return this;
    }
    nullsLast() {
        this.config.nulls = 'last';
        return this;
    }
    where(condition) {
        this.config.where = condition;
        return this;
    }
    /** @internal */
    build(table) {
        return new Index(this.config, table);
    }
}
exports.IndexBuilder = IndexBuilder;
class Index {
    constructor(config, table) {
        this.config = Object.assign(Object.assign({}, config), { table });
    }
}
exports.Index = Index;
function index(name) {
    return new IndexBuilderOn(false, name);
}
exports.index = index;
function uniqueIndex(name) {
    return new IndexBuilderOn(true, name);
}
exports.uniqueIndex = uniqueIndex;
//# sourceMappingURL=indexes.js.map